<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Li Guangsheng's Blog</title><link href="http://liguangsheng.github.io/" rel="alternate"></link><link href="http://liguangsheng.github.io/feeds/all.atom.xml" rel="self"></link><id>http://liguangsheng.github.io/</id><updated>2017-11-18T13:32:00+08:00</updated><entry><title>Python中的GIL</title><link href="http://liguangsheng.github.io/pythonzhong-de-gil.html" rel="alternate"></link><published>2017-08-11T16:42:00+08:00</published><updated>2017-08-15T09:26:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-08-11:/pythonzhong-de-gil.html</id><summary type="html">&lt;p&gt;GIL，全称是Global Interpreter Lock，全局解释器锁。GIL是CPython的一个设计，而不是python语言的特性。官方对GIL解释如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In CPython, the global interpreter lock, or GIL, is a mutex that prevents multiple native threads from executing Python bytecodes at once. This lock is necessary mainly because CPython’s memory management is not thread-safe. (However, since the GIL exists, other features …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;GIL，全称是Global Interpreter Lock，全局解释器锁。GIL是CPython的一个设计，而不是python语言的特性。官方对GIL解释如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In CPython, the global interpreter lock, or GIL, is a mutex that prevents multiple native threads from executing Python bytecodes at once. This lock is necessary mainly because CPython’s memory management is not thread-safe. (However, since the GIL exists, other features have grown to depend on the guarantees that it enforces.)&lt;/p&gt;
&lt;p&gt;在CPython中，GIL是用来防止多个线程同时执行python的字节码的，GIL存在的主要原因是CPython的内存管理器并非线程安全的。（然而，有了GIL后，很多其他特性的实现都依赖于GIL）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在多线程编程中，后台确实有多个线程在同时运行，不过GIL的存在使得多个线程中只有一个线程在执行Python代码，其他线程需要等待GIL锁的释放才有机会执行。&lt;/p&gt;
&lt;p&gt;GIL的好处在于，由于这把大锁的存在，python内的对象默认都是线程安全的，不必额外的再去手动加锁。在开发过程中省了很多事。&lt;/p&gt;
&lt;p&gt;GIL的坏处在于，由于GIL的存在，是的多线程中实际上只有一个线程在执行python字节码，当一个线程执行的时候，其他的线程都在等待GIL的释放，并没有真正执行。再加上线程上下文切换花费的资源，实际上并不一定比单线程效率高。&lt;/p&gt;
&lt;p&gt;释放GIL的条件是遇到IO操作或者字节码指令执行了一定的条数，所以对于IO密集的并发操作，Python的多线程还是有用的。&lt;/p&gt;</content><category term="python"></category><category term="gil"></category></entry><entry><title>常用linux命令</title><link href="http://liguangsheng.github.io/chang-yong-linuxming-ling.html" rel="alternate"></link><published>2017-07-21T00:00:00+08:00</published><updated>2017-07-21T00:00:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-07-21:/chang-yong-linuxming-ling.html</id><summary type="html">&lt;h2&gt;ssh&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# ssh登陆
# ssh user@host -p port
ssh lgs@localhost -p 9922
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;scp&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 上传文件
# scp -P port /path/to/local user@host:/path/to/remote
scp -P 9922 d:\tmp\test.py lgs@localhost:/tmp/test.py

# 上传文件夹
# scp -r -P port /path/to/local user@host:/path/to/remote …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;ssh&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# ssh登陆
# ssh user@host -p port
ssh lgs@localhost -p 9922
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;scp&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 上传文件
# scp -P port /path/to/local user@host:/path/to/remote
scp -P 9922 d:\tmp\test.py lgs@localhost:/tmp/test.py

# 上传文件夹
# scp -r -P port /path/to/local user@host:/path/to/remote
scp -r -P 9922 d:\tmp\test\ lgs@localhost:/tmp/test/

# 下载文件
scp -P 9922 lgs@localhost:/tmp/test.py d:\tmp\test.py 

# 下载文件夹
scp -r -P 9922 lgs@localhost:/tmp/test/ d:\tmp\test\
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;进程&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Ctrl-z # 挂起当前进程到后台
bg # 查看后台进程
bg [id] # 后台运行进程
fg [id] # 将进程切到前台运行
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;查找文件&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find &amp;lt;path&amp;gt; -name &amp;quot;*xxx*&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;统计行数&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -name &amp;quot;*.py&amp;quot;|xargs cat|wc -l
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;OpenSSH&lt;/h2&gt;
&lt;p&gt;openssh 要求密码，提示&lt;code&gt;passphrase length hidden intenationlly&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-copy-id localhost
&lt;/pre&gt;&lt;/div&gt;</content><category term="linux"></category></entry><entry><title>ZeroMQ笔记</title><link href="http://liguangsheng.github.io/zeromqbi-ji.html" rel="alternate"></link><published>2017-07-17T12:01:00+08:00</published><updated>2017-07-18T09:30:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-07-17:/zeromqbi-ji.html</id><summary type="html">&lt;h1&gt;安装&lt;/h1&gt;
&lt;p&gt;安装ZeroMQ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 下载源代码并解压
wget https://github.com/zeromq/libzmq/releases/download/v4.2.1/zeromq-4.2.1.tar.gz
tar xzvf zeromq-4.2.1.tar.gz

# 编译安装
cd zeromq-4.2.1
./configure
make
sudo make install
sudo ldconfig
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装pyzmq&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install pyzmq
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;简介&lt;/h1&gt;
&lt;h2&gt;Request-reply pattern 请求-回复模型&lt;/h2&gt;
&lt;p&gt;这种模型主要用于从客户端向一个或多个服务实例发送请求，然后等待紧接着对于每个请求的回复
里面又具体分了ZMQ_REQ ZMQ_REP …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;安装&lt;/h1&gt;
&lt;p&gt;安装ZeroMQ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 下载源代码并解压
wget https://github.com/zeromq/libzmq/releases/download/v4.2.1/zeromq-4.2.1.tar.gz
tar xzvf zeromq-4.2.1.tar.gz

# 编译安装
cd zeromq-4.2.1
./configure
make
sudo make install
sudo ldconfig
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装pyzmq&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install pyzmq
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;简介&lt;/h1&gt;
&lt;h2&gt;Request-reply pattern 请求-回复模型&lt;/h2&gt;
&lt;p&gt;这种模型主要用于从客户端向一个或多个服务实例发送请求，然后等待紧接着对于每个请求的回复
里面又具体分了ZMQ_REQ ZMQ_REP ZMQ_DEALER ZMQ_ROUTER
REQ 发送完消息后，必须接收一个回应消息后，才能发送新的消息。
REP当接收消息时，都会返回一个消息。
&lt;img alt="" src="leanote://file/getImage?fileId=596c6975ab644114ba0014f1"&gt;
&lt;img alt="" src="leanote://file/getImage?fileId=596c6975ab644114ba0014f2"&gt;&lt;/p&gt;
&lt;h2&gt;Publish-subscribe pattern 发布-订阅模式&lt;/h2&gt;
&lt;p&gt;这种模式主要用于1对多的数据发布（一个发布者，多个订阅者）
里面又具体分了ZMQ_PUB ZMQ_SUB
PUB发送消息给所有的SUB。如果此时SUB没有启动，下次启动时会漏掉该消息。
&lt;img alt="" src="leanote://file/getImage?fileId=596c6975ab644114ba0014f0"&gt;&lt;/p&gt;
&lt;h2&gt;Pipeline pattern 管道模式&lt;/h2&gt;
&lt;p&gt;这种模式主要用于发布数据到由管道排列的节点上面，数据总是沿着管道流动。每个管道阶段连接了至少一个节点
里面又具体分了ZMQ_PUSH ZMQ_PULL
一个1对N队列的实现，PUSH将数据放入队列，PULL从队列中取出数据。数据会负载均衡的发送给每一个PULL。
&lt;img alt="" src="leanote://file/getImage?fileId=596c6d7dab644114ba00156b"&gt;&lt;/p&gt;
&lt;h2&gt;Exclusive pair pattern 独立对模式&lt;/h2&gt;
&lt;p&gt;peer to peer 模式。主要用于进程内部线程间通信
里面又具体分了ZMQ_PAIR
线程间1-to-1队列的实现，采用了lock free实现，所以速度很快。&lt;/p&gt;
&lt;h1&gt;示例&lt;/h1&gt;
&lt;h2&gt;Request - Reply&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# zmq_rep.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zmq&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;socket&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;REP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tcp://*:5555&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Received request: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;:exit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;World&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# zmq_req.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zmq&lt;/span&gt;

&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;socket&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;REQ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tcp://localhost:5555&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Sending request: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Received reply: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;:exit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Publish - Subscribe&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# zmq_pub.py&lt;/span&gt;
 &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zmq&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;publisher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PUB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;publisher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tcp://127.0.0.1:5557&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;



&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Sending A {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;publisher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Sending B {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;publisher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;publisher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A :exit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;publisher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B :exit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# zmq_sub.py&lt;/span&gt;
 &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zmq&lt;/span&gt;

&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;subscribe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SUB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;subscribe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tcp://127.0.0.1:5557&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;subscribe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setsockopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SUBSCRIBE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subscribe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv_string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Reveived: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;:exit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Pipeline&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# zmq_ventilator.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zmq&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tcp://*:5557&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Push message:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Message {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# zmq_worker.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zmq&lt;/span&gt;

&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;receiver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;receiver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tcp://127.0.0.1:5557&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;sender&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tcp://127.0.0.1:5558&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;receiver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# zmq_sink.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zmq&lt;/span&gt;

&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tcp://*:5558&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="zeromq"></category></entry><entry><title>rhel/centos笔记</title><link href="http://liguangsheng.github.io/rhelcentosbi-ji.html" rel="alternate"></link><published>2017-07-13T00:00:00+08:00</published><updated>2017-07-13T00:00:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-07-13:/rhelcentosbi-ji.html</id><summary type="html">&lt;h2&gt;&lt;strong&gt;OS: CentOS 6.8 | RHEL 6.5 &lt;/strong&gt;&lt;/h2&gt;
&lt;h1&gt;VirtualBox中为系统安装增强功能包&lt;/h1&gt;
&lt;p&gt;安装增强功能包需要依赖一些工具包，装上就好&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum install -y gcc gcc-c++ make kernel kernel-devel
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;VirtualBox共享文件夹&lt;/h1&gt;
&lt;p&gt;在设置中，为虚拟机分配一个共享文件夹，勾选固定分配。
在虚拟机中执行以下命令挂载共享文件夹。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mkdir /mnt/vmshare # 创建共享文件夹挂载点
sudo mount -t vboxsf vmshare /mnt/vmshare # 挂载
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;修改主机名(hostname)&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vim /etc/sysconfig/network

NETWORKING=yes
NETWORKING_IPV6=no
HOSTNAME=&amp;lt;your hostname …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;&lt;strong&gt;OS: CentOS 6.8 | RHEL 6.5 &lt;/strong&gt;&lt;/h2&gt;
&lt;h1&gt;VirtualBox中为系统安装增强功能包&lt;/h1&gt;
&lt;p&gt;安装增强功能包需要依赖一些工具包，装上就好&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum install -y gcc gcc-c++ make kernel kernel-devel
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;VirtualBox共享文件夹&lt;/h1&gt;
&lt;p&gt;在设置中，为虚拟机分配一个共享文件夹，勾选固定分配。
在虚拟机中执行以下命令挂载共享文件夹。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mkdir /mnt/vmshare # 创建共享文件夹挂载点
sudo mount -t vboxsf vmshare /mnt/vmshare # 挂载
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;修改主机名(hostname)&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vim /etc/sysconfig/network

NETWORKING=yes
NETWORKING_IPV6=no
HOSTNAME=&amp;lt;your hostname&amp;gt; # 修改这里
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;安装epel扩展&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum intsall epel-release -y
&lt;/pre&gt;&lt;/div&gt;</content><category term="linux"></category><category term="rhel"></category><category term="centos"></category></entry><entry><title>Nginx笔记</title><link href="http://liguangsheng.github.io/nginxbi-ji.html" rel="alternate"></link><published>2017-07-08T13:49:00+08:00</published><updated>2017-11-18T13:32:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-07-08:/nginxbi-ji.html</id><summary type="html">&lt;h1&gt;CentOS上编译安装Nginx&lt;/h1&gt;
&lt;p&gt;首先下载nginx的源代码，这里选择的是当前最前的稳定版1.12.2。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget http://nginx.org/download/nginx-1.12.2.tar.gz
tar xzvf nginx-1.12.2.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(可选)接着下载想要额外添加的模块的源代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# rtmp 直播支持
git clone https://github.com/arut/nginx-rtmp-module

# mp4 流媒体支持
wget http://h264.code-shop.com/download/nginx_mod_h264_streaming-2.2.7.tar.gz
tar xzvf nginx_mod_h264_streaming-2.2 …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;CentOS上编译安装Nginx&lt;/h1&gt;
&lt;p&gt;首先下载nginx的源代码，这里选择的是当前最前的稳定版1.12.2。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget http://nginx.org/download/nginx-1.12.2.tar.gz
tar xzvf nginx-1.12.2.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(可选)接着下载想要额外添加的模块的源代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# rtmp 直播支持
git clone https://github.com/arut/nginx-rtmp-module

# mp4 流媒体支持
wget http://h264.code-shop.com/download/nginx_mod_h264_streaming-2.2.7.tar.gz
tar xzvf nginx_mod_h264_streaming-2.2.7.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;mp4模块还需要修改一下源代码，注释掉&lt;code&gt;nginx_mod_h264_streaming-2.2.7/src/ngx_http_streaming_module.c&lt;/code&gt;这个文件中的第158到161行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mi"&gt;157&lt;/span&gt;   &lt;span class="cm"&gt;/* TODO: Win32 */&lt;/span&gt;
&lt;span class="mi"&gt;158&lt;/span&gt;   &lt;span class="c1"&gt;//if (r-&amp;gt;zero_in_uri)&lt;/span&gt;
&lt;span class="mi"&gt;159&lt;/span&gt;   &lt;span class="c1"&gt;//{&lt;/span&gt;
&lt;span class="mi"&gt;160&lt;/span&gt;   &lt;span class="c1"&gt;//  return NGX_DECLINED;&lt;/span&gt;
&lt;span class="mi"&gt;161&lt;/span&gt;   &lt;span class="c1"&gt;//}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装编译必要的依赖包，不同的系统包名不同。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# ubuntu
sudo apt-get install openssl libssl-dev libpcre3 libpcre3-dev zlib1g-dev

# centos
sudo yum -y install pcre-devel openssl openssl-devel
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;开始编译和安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; nginx-1.12.2 &lt;span class="c1"&gt;# 进入nginx源码目录&lt;/span&gt;
./configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/nginx --with-pcre &lt;span class="se"&gt;\&lt;/span&gt;
    --add-module&lt;span class="o"&gt;=&lt;/span&gt;../nginx-rtmp-module &lt;span class="se"&gt;\&lt;/span&gt;
    --add-module&lt;span class="o"&gt;=&lt;/span&gt;../nginx_mod_h264_streaming-2.2.7

修改objs/Makefile，去掉其中的-Werror

make
make install
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;常用命令&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 启动
/usr/local/nginx/sbin/nginx

# 停止
/usr/local/nginx/sbin/nginx -s stop

# 重新加载配置
/usr/local/nginx/sbin/nginx -s reload
&lt;/pre&gt;&lt;/div&gt;</content><category term="nginx"></category><category term="centos"></category></entry><entry><title>git笔记</title><link href="http://liguangsheng.github.io/gitbi-ji.html" rel="alternate"></link><published>2017-07-03T00:00:00+08:00</published><updated>2017-07-03T00:00:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-07-03:/gitbi-ji.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 克隆仓库
git clone &amp;lt;url&amp;gt; &amp;lt;localpath&amp;gt;

# 查看分支
git branch

# 查看所有分支
git branch -a

# 切换分支
git checkout &amp;lt;branch_name&amp;gt;

# 创建并切换分支
git checkout -b &amp;lt;branch_name&amp;gt;

# 添加文件到暂存区
git add &amp;lt;filename&amp;gt;

# 添加所有文件到暂存区
git add --all

# 提交修改
git commit -m &amp;quot;&amp;lt;comment&amp;gt;&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;暂存&lt;/h1&gt;
&lt;p&gt;stash 操作是栈式的操作。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 将当前修改暂存起来
git stash

# 列出当前stash栈
git stash list

# 查看stash详情
git stash show

# 丢弃stash
git …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 克隆仓库
git clone &amp;lt;url&amp;gt; &amp;lt;localpath&amp;gt;

# 查看分支
git branch

# 查看所有分支
git branch -a

# 切换分支
git checkout &amp;lt;branch_name&amp;gt;

# 创建并切换分支
git checkout -b &amp;lt;branch_name&amp;gt;

# 添加文件到暂存区
git add &amp;lt;filename&amp;gt;

# 添加所有文件到暂存区
git add --all

# 提交修改
git commit -m &amp;quot;&amp;lt;comment&amp;gt;&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;暂存&lt;/h1&gt;
&lt;p&gt;stash 操作是栈式的操作。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 将当前修改暂存起来
git stash

# 列出当前stash栈
git stash list

# 查看stash详情
git stash show

# 丢弃stash
git stash drop

# 将先前的暂存的状态恢复出来
git stash pop | apply

# 清空暂存的状态
git stash clear
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;修改commit&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 合并commit
git rebase -i
&lt;/pre&gt;&lt;/div&gt;</content><category term="git"></category></entry><entry><title>rsync笔记</title><link href="http://liguangsheng.github.io/rsyncbi-ji.html" rel="alternate"></link><published>2017-06-28T09:56:00+08:00</published><updated>2017-07-08T16:32:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-06-28:/rsyncbi-ji.html</id><summary type="html">&lt;p&gt;rsync usage:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rsync #[OPTION]... SRC DEST 
rsync [OPTION]... SRC [USER@]host:DEST 
rsync [OPTION]... [USER@]HOST:SRC DEST 
rsync [OPTION]... [USER@]HOST::SRC DEST 
rsync [OPTION]... SRC [USER@]HOST::DEST 
rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;对应于以上六种命令格式，rsync有六种不同的工作模式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;拷贝本地文件。当SRC和DES路径信息都不包含有单个冒号":"分隔符时就启动这种工作模式。如：rsync -a /data /backup &lt;/li&gt;
&lt;li&gt;使用一个远程shell程序(如rsh …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;rsync usage:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rsync #[OPTION]... SRC DEST 
rsync [OPTION]... SRC [USER@]host:DEST 
rsync [OPTION]... [USER@]HOST:SRC DEST 
rsync [OPTION]... [USER@]HOST::SRC DEST 
rsync [OPTION]... SRC [USER@]HOST::DEST 
rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;对应于以上六种命令格式，rsync有六种不同的工作模式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;拷贝本地文件。当SRC和DES路径信息都不包含有单个冒号":"分隔符时就启动这种工作模式。如：rsync -a /data /backup &lt;/li&gt;
&lt;li&gt;使用一个远程shell程序(如rsh、ssh)来实现将本地机器的内容拷贝到远程机器。当DST路径地址包含单个冒号":"分隔符时启动该模式。如：rsync -avz *.c foo:src &lt;/li&gt;
&lt;li&gt;使用一个远程shell程序(如rsh、ssh)来实现将远程机器的内容拷贝到本地机器。当SRC地址路径包含单个冒号":"分隔符时启动该模式。如：rsync -avz foo:src/bar /data &lt;/li&gt;
&lt;li&gt;从远程rsync服务器中拷贝文件到本地机。当SRC路径信息包含"::"分隔符时启动该模式。如：rsync -av root@192.168.78.192::www /databack &lt;/li&gt;
&lt;li&gt;从本地机器拷贝文件到远程rsync服务器中。当DST路径信息包含"::"分隔符时启动该模式。如：rsync -av /databack root@192.168.78.192::www &lt;/li&gt;
&lt;li&gt;列远程机的文件列表。这类似于rsync传输，不过只要在命令中省略掉本地机信息即可。如：rsync -v rsync://192.168.78.192/www&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;详细参数如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-v, --verbose 详细模式输出 
-q, --quiet 精简输出模式 
-c, --checksum 打开校验开关，强制对文件传输进行校验 
-a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD 
-r, --recursive 对子目录以递归模式处理 
-R, --relative 使用相对路径信息 
-b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。 
--backup-dir 将备份文件(如~filename)存放在在目录下。 
-suffix=SUFFIX 定义备份文件前缀 
-u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件。(不覆盖更新的文件) 
-l, --links 保留软链结 
-L, --copy-links 想对待常规文件一样处理软链结 
--copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结 
--safe-links 忽略指向SRC路径目录树以外的链结 
-H, --hard-links 保留硬链结 
-p, --perms 保持文件权限 
-o, --owner 保持文件属主信息 
-g, --group 保持文件属组信息 
-D, --devices 保持设备文件信息 
-t, --times 保持文件时间信息 
-S, --sparse 对稀疏文件进行特殊处理以节省DST的空间 
-n, --dry-run现实哪些文件将被传输 
-W, --whole-file 拷贝文件，不进行增量检测 
-x, --one-file-system 不要跨越文件系统边界 
-B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节 
-e, --rsh=COMMAND 指定使用rsh、ssh方式进行数据同步 
--rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息 
-C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件 
--existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件 
--delete 删除那些DST中SRC没有的文件 
--delete-excluded 同样删除接收端那些被该选项指定排除的文件 
--delete-after 传输结束以后再删除 
--ignore-errors 及时出现IO错误也进行删除 
--max-delete=NUM 最多删除NUM个文件 
--partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输 
--force 强制删除目录，即使不为空 
--numeric-ids 不将数字的用户和组ID匹配为用户名和组名 
--timeout=TIME IP超时时间，单位为秒 
-I, --ignore-times 不跳过那些有同样的时间和长度的文件 
--size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间 
--modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0 
-T --temp-dir=DIR 在DIR中创建临时文件 
--compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份 
-P 等同于 --partial 
--progress 显示备份过程 
-z, --compress 对备份的文件在传输时进行压缩处理 
--exclude=PATTERN 指定排除不需要传输的文件模式 
--include=PATTERN 指定不排除而需要传输的文件模式 
--exclude-from=FILE 排除FILE中指定模式的文件 
--include-from=FILE 不排除FILE指定模式匹配的文件 
--version 打印版本信息 
--address 绑定到特定的地址 
--config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件 
--port=PORT 指定其他的rsync服务端口 
--blocking-io 对远程shell使用阻塞IO 
-stats 给出某些文件的传输状态 
--progress 在传输时现实传输过程 
--log-format=formAT 指定日志文件格式 
--password-file=FILE 从FILE中得到密码 
--bwlimit=KBPS 限制I/O带宽，KBytes per second 
-h, --help 显示帮助信息
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;rsyncd&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;vim /etc/rsyncd.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[documents]&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/documents&lt;/span&gt;
&lt;span class="s"&gt;        list = true&lt;/span&gt;
&lt;span class="s"&gt;        uid = root&lt;/span&gt;
&lt;span class="s"&gt;        gid = root&lt;/span&gt;
&lt;span class="s"&gt;        read only = false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这是 rsync 最简单的一种配置方式，首先一对中括号的 [document] 代表配置节点的名称。 紧接着几个属性：&lt;/p&gt;
&lt;p&gt;path: 该节点对应的文件路径。
list: 表示该节点是否可被发现。
uid: 指定传输到这里文件所属的用户。
gid: 指定传输到这里的文件所属的组。
read only: 该目录是否只读。
配置完后运行&lt;code&gt;rsync --daemon&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;rsync example&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;# 通过ssh远程同步到本地&lt;/span&gt;
&lt;span class="n"&gt;rsync&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;vrtopg&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;progress&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;rsh&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p28802&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;xxx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="cm"&gt;/* .&lt;/span&gt;

&lt;span class="cm"&gt;# 通过ssh本地同步到远程&lt;/span&gt;
&lt;span class="cm"&gt;rsync -vrtopg --progress --delete --rsh=&amp;#39;ssh -p28802&amp;#39; aaa root@107.182.183.201:/opt/aaa&lt;/span&gt;

&lt;span class="cm"&gt;# 通过rsync协议本地同步到远程(服务器需配置)&lt;/span&gt;
&lt;span class="cm"&gt;rsync -azv --delete aaa root@107.182.183.201::documents&lt;/span&gt;

&lt;span class="cm"&gt;# 通过rsync协议远程同步到本地(服务器需配置)&lt;/span&gt;
&lt;span class="cm"&gt;rsync -azv --delete aaa root@107.182.183.201::documents&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="linux"></category><category term="rsync"></category></entry><entry><title>搭建git服务器</title><link href="http://liguangsheng.github.io/da-jian-gitfu-wu-qi.html" rel="alternate"></link><published>2017-06-28T00:00:00+08:00</published><updated>2017-06-28T00:00:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-06-28:/da-jian-gitfu-wu-qi.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装git
 &lt;code&gt;yum install git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加用户git并切换到git用户来运行git服务
 &lt;code&gt;useradd git
 passwd git
 su git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建相应的ssh目录
 &lt;code&gt;mkdir .ssh &amp;amp;&amp;amp; chmod 700 .ssh
 touch .ssh/authorized_keys &amp;amp;&amp;amp; chmod 600 .ssh/authorized_keys&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;切换到一个空的目录来存放git仓库
 &lt;code&gt;mkdir -p /opt/git/project.git
 cd /opt/git
 chown -R git:git project.git
 cd project.git
 git init --bare&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;禁用shell登录，将&lt;code&gt;/etc/passwd …&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装git
 &lt;code&gt;yum install git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加用户git并切换到git用户来运行git服务
 &lt;code&gt;useradd git
 passwd git
 su git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建相应的ssh目录
 &lt;code&gt;mkdir .ssh &amp;amp;&amp;amp; chmod 700 .ssh
 touch .ssh/authorized_keys &amp;amp;&amp;amp; chmod 600 .ssh/authorized_keys&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;切换到一个空的目录来存放git仓库
 &lt;code&gt;mkdir -p /opt/git/project.git
 cd /opt/git
 chown -R git:git project.git
 cd project.git
 git init --bare&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;禁用shell登录，将&lt;code&gt;/etc/passwd&lt;/code&gt;中的
 &lt;code&gt;git:x:1001:1001:,,,:/home/git:/bin/bash&lt;/code&gt;
 改为
 &lt;code&gt;git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;赋予使用者权限，将授权使用git的ssh公钥收集到&lt;code&gt;~/.ssh/authorizes_keys&lt;/code&gt;中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用git
 &lt;code&gt;git clone git@&amp;lt;server_address&amp;gt;:/opt/git/project.git
 Cloning into 'project'...
 warning: You appear to have cloned an empty repository.&lt;/code&gt;
 &lt;code&gt;git clone ssh://&amp;lt;user&amp;gt;@&amp;lt;server&amp;gt;:&amp;lt;port&amp;gt;&amp;lt;path&amp;gt;
 git clone ssh://root@xxx.xxx.xxx.xxx:28802/opt/git/proje ct.git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="git"></category><category term="centos"></category></entry><entry><title>PostgreSQL笔记</title><link href="http://liguangsheng.github.io/postgresqlbi-ji.html" rel="alternate"></link><published>2017-06-21T10:42:00+08:00</published><updated>2017-08-24T11:07:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-06-21:/postgresqlbi-ji.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;数据库&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 创建数据库
create database &amp;lt;name&amp;gt;;
create database &amp;lt;name&amp;gt; template &amp;lt;template_name&amp;gt;;

# 切换数据库
\c &amp;lt;dbname&amp;gt;

# 删除数据库
drop database &amp;lt;name&amp;gt;;
# or
$ psql -U postgres -c &amp;quot;drop database &amp;lt;name&amp;gt;;&amp;quot;
# or
$ dropdb &amp;lt;dbname&amp;gt;
# 如果删除时报错`cannot be executed on the currently open database`，切换到其他的数据库连接上，再进行删除

# 连接数据库
\connect &amp;lt;name&amp;gt;

# 列出数据库
\l
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;表格&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 列出所有表格
\d 
\dt

# 查看表结构
\d …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;数据库&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 创建数据库
create database &amp;lt;name&amp;gt;;
create database &amp;lt;name&amp;gt; template &amp;lt;template_name&amp;gt;;

# 切换数据库
\c &amp;lt;dbname&amp;gt;

# 删除数据库
drop database &amp;lt;name&amp;gt;;
# or
$ psql -U postgres -c &amp;quot;drop database &amp;lt;name&amp;gt;;&amp;quot;
# or
$ dropdb &amp;lt;dbname&amp;gt;
# 如果删除时报错`cannot be executed on the currently open database`，切换到其他的数据库连接上，再进行删除

# 连接数据库
\connect &amp;lt;name&amp;gt;

# 列出数据库
\l
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;表格&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 列出所有表格
\d 
\dt

# 查看表结构
\d &amp;lt;table_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;其他&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 退出
\q
&lt;/pre&gt;&lt;/div&gt;</content><category term="postgresql"></category></entry><entry><title>编译安装emacs25</title><link href="http://liguangsheng.github.io/bian-yi-an-zhuang-emacs25.html" rel="alternate"></link><published>2017-05-05T17:37:00+08:00</published><updated>2017-06-15T17:45:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-05-05:/bian-yi-an-zhuang-emacs25.html</id><summary type="html">&lt;h1&gt;下载源码并解压&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget http://mirrors.ustc.edu.cn/gnu/emacs/emacs-25.2.tar.gz
tar xzvf emacs-25.2.tar.gz
cd emacs-25.2
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;安装编译依赖&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install -y gcc gtk2 gtk2-devel libXpm libXpm-devel libtiff libtiff-devel libjpeg-turbo  libjpeg-turbo-devel giflib giflib-devel
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;编译&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./configure --prefix=/usr/local/emacs-25
make
make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;make时出现了&lt;code&gt;aclocal-1.5.1 …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;h1&gt;下载源码并解压&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget http://mirrors.ustc.edu.cn/gnu/emacs/emacs-25.2.tar.gz
tar xzvf emacs-25.2.tar.gz
cd emacs-25.2
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;安装编译依赖&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install -y gcc gtk2 gtk2-devel libXpm libXpm-devel libtiff libtiff-devel libjpeg-turbo  libjpeg-turbo-devel giflib giflib-devel
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;编译&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./configure --prefix=/usr/local/emacs-25
make
make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;make时出现了&lt;code&gt;aclocal-1.5.1 missing&lt;/code&gt;的错误，执行&lt;code&gt;autoreconf -f -i&lt;/code&gt;后再make。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make install&lt;/code&gt;时出现&lt;code&gt;makeinfo command not found&lt;/code&gt;，执行&lt;code&gt;yum install texinfo&lt;/code&gt;。&lt;/p&gt;</content><category term="centos"></category><category term="emacs"></category></entry><entry><title>linux配置Shadowsocks</title><link href="http://liguangsheng.github.io/linuxpei-zhi-shadowsocks.html" rel="alternate"></link><published>2017-04-06T00:00:00+08:00</published><updated>2017-04-06T00:00:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-04-06:/linuxpei-zhi-shadowsocks.html</id><summary type="html">&lt;h2&gt;安装Shadowsocks&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install shadowsocks
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;服务端配置&lt;/h2&gt;
&lt;p&gt;shadowsocks配置文件，shadowsocks.json&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;server&amp;quot;:&amp;quot;0.0.0.0&amp;quot;,
    &amp;quot;server_port&amp;quot;:1118,
    &amp;quot;local_address&amp;quot;:&amp;quot;127.0.0.1&amp;quot;,
    &amp;quot;local_port&amp;quot;:1080,
    &amp;quot;password&amp;quot;:&amp;quot;11181118&amp;quot;,
    &amp;quot;timeout&amp;quot;:300,
    &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;启动ssserver&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssserver -c shadowsocks.json -d start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;关闭ssserver&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssserver -d stop
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;客户端配置&lt;/h2&gt;
&lt;p&gt;shadowsocks配置文件，/etc/shadowsocks/config.json&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;server&amp;quot;:&amp;quot;0.0.0.0 …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;安装Shadowsocks&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install shadowsocks
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;服务端配置&lt;/h2&gt;
&lt;p&gt;shadowsocks配置文件，shadowsocks.json&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;server&amp;quot;:&amp;quot;0.0.0.0&amp;quot;,
    &amp;quot;server_port&amp;quot;:1118,
    &amp;quot;local_address&amp;quot;:&amp;quot;127.0.0.1&amp;quot;,
    &amp;quot;local_port&amp;quot;:1080,
    &amp;quot;password&amp;quot;:&amp;quot;11181118&amp;quot;,
    &amp;quot;timeout&amp;quot;:300,
    &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;启动ssserver&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssserver -c shadowsocks.json -d start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;关闭ssserver&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssserver -d stop
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;客户端配置&lt;/h2&gt;
&lt;p&gt;shadowsocks配置文件，/etc/shadowsocks/config.json&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;server&amp;quot;:&amp;quot;0.0.0.0&amp;quot;,
    &amp;quot;server_port&amp;quot;:1118,
    &amp;quot;local_address&amp;quot;:&amp;quot;127.0.0.1&amp;quot;,
    &amp;quot;local_port&amp;quot;:1080,
    &amp;quot;password&amp;quot;:&amp;quot;11181118&amp;quot;,
    &amp;quot;timeout&amp;quot;:300,
    &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;启动shadowsocks客户端&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sslocal -c /etc/shadowsocks/config.json -d start
&lt;/pre&gt;&lt;/div&gt;</content><category term="linux"></category><category term="shadowsocks"></category></entry><entry><title>linux备份与恢复</title><link href="http://liguangsheng.github.io/linuxbei-fen-yu-hui-fu.html" rel="alternate"></link><published>2017-03-20T00:00:00+08:00</published><updated>2017-03-20T00:00:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-03-20:/linuxbei-fen-yu-hui-fu.html</id><summary type="html">&lt;h2&gt;tar&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 备份系统
cd /
tar cvpzf backup.tgz --exclude=/proc --exclude=/lost+found --exclude=/backup.tgz --exclude=/mnt --exclude=/sys /  

# 恢复系统
tar xvpfz backup.tgz -C /
# 创建备份时跳过的文件夹
mkdir proc
mkdir mnt
mkdir sys
mkdir lost+found
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;dd&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 在livecd中操作
# 备份系统
dd if=/dev/sdax of=~/archlinux.backup
，在livecd中
dd if=archlinux.backup …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;tar&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 备份系统
cd /
tar cvpzf backup.tgz --exclude=/proc --exclude=/lost+found --exclude=/backup.tgz --exclude=/mnt --exclude=/sys /  

# 恢复系统
tar xvpfz backup.tgz -C /
# 创建备份时跳过的文件夹
mkdir proc
mkdir mnt
mkdir sys
mkdir lost+found
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;dd&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 在livecd中操作
# 备份系统
dd if=/dev/sdax of=~/archlinux.backup
，在livecd中
dd if=archlinux.backup of=/dev/sdax
&lt;/pre&gt;&lt;/div&gt;</content><category term="linux"></category><category term="backup"></category></entry><entry><title>pyenv管理Python版本</title><link href="http://liguangsheng.github.io/pyenvguan-li-pythonban-ben.html" rel="alternate"></link><published>2017-03-19T00:00:00+08:00</published><updated>2017-11-11T00:00:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-03-19:/pyenvguan-li-pythonban-ben.html</id><summary type="html">&lt;h2&gt;安装&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer &lt;span class="p"&gt;|&lt;/span&gt; bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;添加以下语句到.bashrc并重新source。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;export PATH=&amp;quot;/home/&amp;lt;user&amp;gt;/.pyenv/bin:$PATH&amp;quot;
eval &amp;quot;$(pyenv init -)&amp;quot;
eval &amp;quot;$(pyenv virtualenv-init -)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行一下&lt;code&gt;pyenv update&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;依赖&lt;/h2&gt;
&lt;p&gt;编译Python时需要一些依赖。
Ubuntu/Debian:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \
libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;安装&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer &lt;span class="p"&gt;|&lt;/span&gt; bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;添加以下语句到.bashrc并重新source。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;export PATH=&amp;quot;/home/&amp;lt;user&amp;gt;/.pyenv/bin:$PATH&amp;quot;
eval &amp;quot;$(pyenv init -)&amp;quot;
eval &amp;quot;$(pyenv virtualenv-init -)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行一下&lt;code&gt;pyenv update&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;依赖&lt;/h2&gt;
&lt;p&gt;编译Python时需要一些依赖。
Ubuntu/Debian:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \
libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Fedora/CentOS/RHEL:
FIXME: you may need to install xz to build some CPython version&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Mac OS X:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew install readline xz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;: libssl-dev is required when compiling Python, installing libssl-dev will actually install zlib1g-dev, which leads to uninstall and re-install Python versions (installed before installing libssl-dev). On Redhat and derivatives the package is named openssl-devel.&lt;/p&gt;
&lt;h2&gt;pyenv命令&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 列出所有可用的命令
pyenv commands

# 更新pyenv
pyenv update

# 查看当前所有的python版本
pyenv versions 

# 查看当前激活的python版本
pyenv version

# 安装指定版本的python
pyenv install -v [version] 

# 卸载指定版本的python
pyenv uninstall -v [version]

# 为所有已安装的可执行文件创建 shims，因此，每当你增删了 Python 版本或带有可执行文件的包（如 pip）以后，都应该执行一次本命令
pyenv rehash

# 指定全局python版本
pyenv global [version]

# 指定本地面向应用程序的python版本
pyenv local [version]
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;pyenv与virtualenv配合&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 新建一个virtualenv
pyenv virtualenv [version] [venv_name]

# 激活一个virtualenv
pyenv activate [venv_name]

# 退出virtualenv环境
pyenv deactivate

# 删除一个virtualenv环境
pyenv uninstall [venv_name]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;通过pyenv建立的虚拟环境都在&lt;code&gt;~/.pyenv/versions&lt;/code&gt;下，不会出现在应用目录里面&lt;/p&gt;
&lt;h2&gt;遇到的问题&lt;/h2&gt;
&lt;h3&gt;pyenv安装新版本时，默认的源速度比较慢&lt;/h3&gt;
&lt;p&gt;选择国内的镜像站（比如mirrors.sohu.com），手动下载python包，放到&lt;code&gt;~/.pyenv/cache&lt;/code&gt;目录下，再安装时会用cache下的包安装。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;version=2.7.13 &amp;amp;&amp;amp; wget http://mirrors.sohu.com/python/$version/Python-$version.tar.xz -P ~/.pyenv/cache &amp;amp;&amp;amp; pyenv install -v $version
&lt;/pre&gt;&lt;/div&gt;</content><category term="Python"></category><category term="pyenv"></category><category term="version"></category></entry><entry><title>ubuntu笔记</title><link href="http://liguangsheng.github.io/ubuntubi-ji.html" rel="alternate"></link><published>2017-03-17T00:00:00+08:00</published><updated>2017-03-17T00:00:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-03-17:/ubuntubi-ji.html</id><summary type="html">&lt;p&gt;OS: Ubuntu 16.04 xenial
Kernel: x86_64 Linux 4.4.0-xx-generic&lt;/p&gt;
&lt;h2&gt;启动:text mode or GUI&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 禁用GUI，启动到text mode
sudo systemctl disable display-manager.service
# 启用GUI
sudo systemctl enable display-manager.service
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;ssh服务&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt install openssh-server # 安装ssh服务
sudo systemctl start sshd.service # 启动ssh服务
sudo systemctl enable sshd.service # 开机自启动
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;zsh&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;OS: Ubuntu 16.04 xenial
Kernel: x86_64 Linux 4.4.0-xx-generic&lt;/p&gt;
&lt;h2&gt;启动:text mode or GUI&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 禁用GUI，启动到text mode
sudo systemctl disable display-manager.service
# 启用GUI
sudo systemctl enable display-manager.service
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;ssh服务&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt install openssh-server # 安装ssh服务
sudo systemctl start sshd.service # 启动ssh服务
sudo systemctl enable sshd.service # 开机自启动
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;zsh&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt install zsh
sh -c &amp;quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;emacs25&lt;/h2&gt;
&lt;p&gt;通过ppa安装emacs25&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# through ppa
sudo add-apt-repository ppa:alexmurray/emacs
sudo apt-get update
sudo apt-get install emacs25
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;通过源代码编译安装emacs&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# through source code
sudo apt install build-essential checkinstall
sudo apt-get build-dep emacs24

wget http://ftp.gnu.org/gnu/emacs/emacs-25.1.tar.gz
tar xzvf emacs-25.1.tar.gz
cd emacs-25.1
./configure
make
sudo checkinstall

# 删除emacs25
sudo dpkg -r emacs-25
&lt;/pre&gt;&lt;/div&gt;</content><category term="linux"></category><category term="ubuntu"></category></entry><entry><title>linux压缩与解压</title><link href="http://liguangsheng.github.io/linuxya-suo-yu-jie-ya.html" rel="alternate"></link><published>2017-02-27T00:00:00+08:00</published><updated>2017-02-27T00:00:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-02-27:/linuxya-suo-yu-jie-ya.html</id><summary type="html">&lt;h2&gt;.tar&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 将foobar打包为/tmp/foobar.tar
tar cvf /tmp/foobar.tar foobar/

# 将/tmp/foobar.tar解包为foobar
tar xvf /tmp/foobar.tar
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;.tar.gz | .tgz&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 以gzip方式压缩
tar zcvf /tmp/foobar.tar.gz foobar/

# 解压
tar zxvf /tmp/foobar.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;.tar.bz2&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 以bzip2方式压缩
tar jcvf /tmp/foobar.tar.bz2 foobar/

# 解压
tar …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;.tar&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 将foobar打包为/tmp/foobar.tar
tar cvf /tmp/foobar.tar foobar/

# 将/tmp/foobar.tar解包为foobar
tar xvf /tmp/foobar.tar
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;.tar.gz | .tgz&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 以gzip方式压缩
tar zcvf /tmp/foobar.tar.gz foobar/

# 解压
tar zxvf /tmp/foobar.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;.tar.bz2&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 以bzip2方式压缩
tar jcvf /tmp/foobar.tar.bz2 foobar/

# 解压
tar jxvf /tmp/foobar.tar.bz2 
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;.zip&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 压缩文件夹
zip -r /tmp/foobar.zip foobar/

# 压缩文件
zip foo.zip foo

# 解压
unzip /tmp/foobar.zip
&lt;/pre&gt;&lt;/div&gt;</content><category term="linux"></category><category term="tar"></category></entry><entry><title>archlinux笔记</title><link href="http://liguangsheng.github.io/archlinuxbi-ji.html" rel="alternate"></link><published>2017-02-09T00:00:00+08:00</published><updated>2017-02-09T00:00:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-02-09:/archlinuxbi-ji.html</id><summary type="html">&lt;p&gt;Shell: zsh
窗口管理器: i3wm 
终端模拟器: urxvt 
文本编辑器: vim/emacs
文件浏览器: pfmanfm
网页浏览器: firefox
音乐播放器: moc
邮件客户端: mutt
代理服务器: shadowsocks
文档浏览器: zeal&lt;/p&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;h2&gt;VirtualBox Additions&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -S virtualbox-guest-utils xf86-video-dummy xf86-video-fbdev xf86-video-vesa
sudo modprobe -a vboxguest vboxsf vboxvideo
sudo systemctl enable vboxservice.service
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;yaourt&lt;/h2&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/pacman.conf&lt;/code&gt;，在末尾添加：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[archlinuxcn]&lt;/span&gt;
&lt;span class="na"&gt;SigLevel …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Shell: zsh
窗口管理器: i3wm 
终端模拟器: urxvt 
文本编辑器: vim/emacs
文件浏览器: pfmanfm
网页浏览器: firefox
音乐播放器: moc
邮件客户端: mutt
代理服务器: shadowsocks
文档浏览器: zeal&lt;/p&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;h2&gt;VirtualBox Additions&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -S virtualbox-guest-utils xf86-video-dummy xf86-video-fbdev xf86-video-vesa
sudo modprobe -a vboxguest vboxsf vboxvideo
sudo systemctl enable vboxservice.service
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;yaourt&lt;/h2&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/pacman.conf&lt;/code&gt;，在末尾添加：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[archlinuxcn]&lt;/span&gt;
&lt;span class="na"&gt;SigLevel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Optional TrustedOnly&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;http://repo.archlinuxcn.org/$arch&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;安装软件包&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -S curl wget tmux moc rxvt-unicode zsh chromium vim emacs git python python-setuptools python-pip python2 python2-setuptools python2-pip
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;字体&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S ttf-ms-fonts
yaourt -S adobe-source-code-pro
yaourt wqy
git clone https://github.com/powerline/fonts.git
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;xorg&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -S xorg-server xorg-server-utils xorg-apps xorg-xinit xorg-twm xorg-xclock xterm 
cp /etc/X11/xinit/xinitrc ~/.xinitrc
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;i3wm&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -S i3wm i3status
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;常用快捷键
|快捷键(区分大小写)|功能描述|
|---|---|
|Mod E|关闭i3|
|Mod C|重新加载i3|
|Mod R|重新启动i3|
|Mod Q|关闭当前窗口|
|Mod e|进入排列模式|
|Mod w|进入标签模式|
|Mod s|进入层叠模式|
|Mod r|进入窗口尺寸调整模式|
|Mod Enter|打开终端|&lt;/p&gt;
&lt;h2&gt;urxvt&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 安装
yaourt -S rxvt-unicode rxvt-perls
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;~/.Xresources&lt;/code&gt;配置见https://github.com/liguangsheng/dotfiles/blob/master/.Xresources&lt;/p&gt;
&lt;h3&gt;Cpoy &amp;amp; Patse&lt;/h3&gt;
&lt;p&gt;urxvt使用PRIMARY来复制和粘贴，不能与系统的clipboard同步。&lt;/p&gt;
&lt;p&gt;使用urxvt-perls的selection-to-clipboard可以同步。&lt;/p&gt;
&lt;p&gt;也可以使用第三方的程序来同步PRIMARY和系统的clipboard。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S autocutsel
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;~/.xinitrc&lt;/code&gt;中加入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;autocutsel -fork &amp;amp;
autocutsel -selection PRIMARY -fork &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;中文输入法&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S fcitx fcitx-im fcitx-cloudpinyin fcitx-sogoupinyin fcitx-configtool
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;zsh&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S zsh
sh -c &amp;quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;feh&lt;/h2&gt;
&lt;p&gt;使用feh设置壁纸&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;feh --bg-scale &amp;lt;path-to-wallpaper&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;misc&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pacman -Syu 更新系统
pacman -Rsc 删除包及其以来
&lt;/pre&gt;&lt;/div&gt;</content><category term="linux"></category><category term="archlinux"></category></entry><entry><title>RabbitMQ笔记</title><link href="http://liguangsheng.github.io/rabbitmqbi-ji.html" rel="alternate"></link><published>2017-02-07T14:57:00+08:00</published><updated>2017-07-18T16:51:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-02-07:/rabbitmqbi-ji.html</id><summary type="html">&lt;h1&gt;安装&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum install -y rabbitmq-server
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;启动&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl start rabbitmq-server
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;rabbitmqctl&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 列出所有queue
rabbitmqctl list_queues
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Python 示例&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# rmq_producer.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pika&lt;/span&gt;

&lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pika&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BlockingConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pika&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionParameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;queue_declare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basic_publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;routing_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello World!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[x] Sent …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;安装&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum install -y rabbitmq-server
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;启动&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl start rabbitmq-server
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;rabbitmqctl&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 列出所有queue
rabbitmqctl list_queues
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Python 示例&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# rmq_producer.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pika&lt;/span&gt;

&lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pika&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BlockingConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pika&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionParameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;queue_declare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basic_publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;routing_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello World!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[x] Sent &amp;quot;Hello World!&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basic_publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;routing_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;:exit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# rmq_consumer.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pika&lt;/span&gt;

&lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pika&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BlockingConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pika&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionParameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;queue_declare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[x] Received {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basic_consume&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;no_ack&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[*] Waiting for messages. To exit press CTRL+C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start_consuming&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# rmq_new_task.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pika&lt;/span&gt;

&lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pika&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BlockingConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pika&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionParameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;queue_declare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;task_queue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;durable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;First Message&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Second Message&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Third Message&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Fourth Message&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Fifth Message&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basic_publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;routing_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;task_queue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="n"&gt;properties&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pika&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BasicProperties&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                              &lt;span class="n"&gt;delivery_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
                              &lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; [x] Sent &amp;quot;{}&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# rmq_worker.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pika&lt;/span&gt;

&lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pika&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BlockingConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pika&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionParameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;queue_declare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;task_queue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;durable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; [x] Received {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; [x] Done&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basic_ack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;delivery_tag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delivery_tag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basic_qos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prefetch_count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basic_consume&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;task_queue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; [*] Waiting for messages. To exit press CTRL+C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start_consuming&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="rabbitmq"></category></entry><entry><title>VirtualBox克隆虚拟机后重新初始化网卡</title><link href="http://liguangsheng.github.io/virtualboxke-long-xu-ni-ji-hou-zhong-xin-chu-shi-hua-wang-qia.html" rel="alternate"></link><published>2017-01-22T15:21:00+08:00</published><updated>2017-06-15T17:45:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-01-22:/virtualboxke-long-xu-ni-ji-hou-zhong-xin-chu-shi-hua-wang-qia.html</id><summary type="html">&lt;p&gt;VirtualBox重新初始化虚拟机后，新虚拟机会重新生成两张不一样的网卡。&lt;/p&gt;
&lt;p&gt;系统会扫描新生成的网卡，添加到&lt;code&gt;/etc/udev/rules.d/70-persistent-net.rules&lt;/code&gt;中。删除多余的网卡，只剩下两条，将名称改为&lt;code&gt;eth0&lt;/code&gt;和&lt;code&gt;eth1&lt;/code&gt;，将&lt;code&gt;ATTR{address}&lt;/code&gt;修改为对应的MAC地址。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /etc/udev/rules.d/70-persistent-net.rules

# PCI device 0x8086:0x100e (e1000)
SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, DRIVERS==&amp;quot;?*&amp;quot;, ATTR{address}==&amp;quot;08:00:27:20:2b:d6&amp;quot;, ATTR{type}==&amp;quot;1&amp;quot;, KERNEL …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;VirtualBox重新初始化虚拟机后，新虚拟机会重新生成两张不一样的网卡。&lt;/p&gt;
&lt;p&gt;系统会扫描新生成的网卡，添加到&lt;code&gt;/etc/udev/rules.d/70-persistent-net.rules&lt;/code&gt;中。删除多余的网卡，只剩下两条，将名称改为&lt;code&gt;eth0&lt;/code&gt;和&lt;code&gt;eth1&lt;/code&gt;，将&lt;code&gt;ATTR{address}&lt;/code&gt;修改为对应的MAC地址。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /etc/udev/rules.d/70-persistent-net.rules

# PCI device 0x8086:0x100e (e1000)
SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, DRIVERS==&amp;quot;?*&amp;quot;, ATTR{address}==&amp;quot;08:00:27:20:2b:d6&amp;quot;, ATTR{type}==&amp;quot;1&amp;quot;, KERNEL==&amp;quot;eth*&amp;quot;, NAME=&amp;quot;eth0&amp;quot;

# PCI device 0x8086:0x100e (e1000)
SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, DRIVERS==&amp;quot;?*&amp;quot;, ATTR{address}==&amp;quot;08:00:27:bc:43:e8&amp;quot;, ATTR{type}==&amp;quot;1&amp;quot;, KERNEL==&amp;quot;eth*&amp;quot;, NAME=&amp;quot;eth1&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;/etc/sysconfig/network-scripts&lt;/code&gt;下删除多余的ifcfg-eth*，并建立ifcfg-eth0和ifcfg-eth1。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat ifcfg-eth0 
DEVICE=eth0
BOOTPROTO=dhcp
IPV6INIT=yes
NM_CONTROLLED=no
ONBOOT=yes
TYPE=Ethernet
USERCTL=no
PEERDNS=yes
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat ifcfg-eth1 
DEVICE=eth1
BOOTPROTO=dhcp
IPV6INIT=yes
NM_CONTROLLED=no
ONBOOT=yes
TYPE=Ethernet
USERCTL=no
PEERDNS=yes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启。&lt;/p&gt;</content><category term="virtualbox"></category></entry><entry><title>MacType与VirtualBox冲突</title><link href="http://liguangsheng.github.io/mactypeyu-virtualboxchong-tu.html" rel="alternate"></link><published>2017-01-12T15:45:00+08:00</published><updated>2017-06-15T17:52:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2017-01-12:/mactypeyu-virtualboxchong-tu.html</id><summary type="html">&lt;p&gt;MacType渲染字体会与VirtualBox冲突导致虚拟机不能启动。&lt;/p&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;在MacType的配置文件中加入以下节点&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[ExcludeSub] 
javaw.exe 
vbox-img.exe
VBoxBalloonCtrl.exe
VBoxDTrace.exe
VBoxExtPackHelperApp.exe
VBoxHeadless.exe
VBoxManage.exe
VBoxNetDHCP.exe
VBoxNetNAT.exe
VBoxSDL.exe
VBoxSVC.exe
VBoxTestOGL.exe
VBoxWebSrv.exe
VirtualBox.exe
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;MacType渲染字体会与VirtualBox冲突导致虚拟机不能启动。&lt;/p&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;在MacType的配置文件中加入以下节点&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[ExcludeSub] 
javaw.exe 
vbox-img.exe
VBoxBalloonCtrl.exe
VBoxDTrace.exe
VBoxExtPackHelperApp.exe
VBoxHeadless.exe
VBoxManage.exe
VBoxNetDHCP.exe
VBoxNetNAT.exe
VBoxSDL.exe
VBoxSVC.exe
VBoxTestOGL.exe
VBoxWebSrv.exe
VirtualBox.exe
&lt;/pre&gt;&lt;/div&gt;</content><category term="mactype"></category><category term="virtualbox"></category></entry><entry><title>正则表达式速查</title><link href="http://liguangsheng.github.io/regex.html" rel="alternate"></link><published>2016-12-22T00:00:00+08:00</published><updated>2016-12-22T00:00:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2016-12-22:/regex.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;来源于网络&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="regex" src="./images/regex.png"&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;来源于网络&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="regex" src="./images/regex.png"&gt;&lt;/p&gt;</content><category term="regex"></category></entry><entry><title>MySQL连接次数过多报错</title><link href="http://liguangsheng.github.io/mysqllian-jie-ci-shu-guo-duo-bao-cuo.html" rel="alternate"></link><published>2016-12-12T17:45:00+08:00</published><updated>2016-12-12T17:45:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2016-12-12:/mysqllian-jie-ci-shu-guo-duo-bao-cuo.html</id><summary type="html">&lt;p&gt;ModifiedL 2017-07-21 15:07
Tags: mysql&lt;/p&gt;
&lt;h2&gt;MySQL 连接报错&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;"Host '10.7.30.133' is blocked because of many connection errors; unblock with 'mysqladmin flush-hosts'"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;h3&gt;增加最大错误连接数&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mysql&amp;gt; use mysql&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;# 查看最大错误连接数&lt;/span&gt;
mysql&amp;gt; show variables like &lt;span class="s1"&gt;&amp;#39;%max_connect_errors%&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# 修改最大错误连接数&lt;/span&gt;
mysql&amp;gt; &lt;span class="nb"&gt;set&lt;/span&gt; global &lt;span class="nv"&gt;max_connect_errors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;# 查看修改结果&lt;/span&gt;
mysql&amp;gt; show variables like &lt;span class="s1"&gt;&amp;#39;%max_connect_errors%&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;重置计数器&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mysql&amp;gt; flush …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;ModifiedL 2017-07-21 15:07
Tags: mysql&lt;/p&gt;
&lt;h2&gt;MySQL 连接报错&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;"Host '10.7.30.133' is blocked because of many connection errors; unblock with 'mysqladmin flush-hosts'"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;h3&gt;增加最大错误连接数&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mysql&amp;gt; use mysql&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;# 查看最大错误连接数&lt;/span&gt;
mysql&amp;gt; show variables like &lt;span class="s1"&gt;&amp;#39;%max_connect_errors%&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# 修改最大错误连接数&lt;/span&gt;
mysql&amp;gt; &lt;span class="nb"&gt;set&lt;/span&gt; global &lt;span class="nv"&gt;max_connect_errors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;# 查看修改结果&lt;/span&gt;
mysql&amp;gt; show variables like &lt;span class="s1"&gt;&amp;#39;%max_connect_errors%&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;重置计数器&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mysql&amp;gt; flush hosts&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或者&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mysqladmin flush-hosts
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>jupyter笔记</title><link href="http://liguangsheng.github.io/jupyterbi-ji.html" rel="alternate"></link><published>2016-12-03T00:00:00+08:00</published><updated>2016-12-03T00:00:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2016-12-03:/jupyterbi-ji.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 安装jupyter
pip install jupyter
# 建立server文件夹
mkdir jupyter-server
cd jypyter-server
# 运行jypyter-notebook
jupyter notebook
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;~/.jupyter/custom&lt;/code&gt;下新建&lt;code&gt;custom.css&lt;/code&gt;。notebook会自动加载这个css文件，来改变页面样式。&lt;/p&gt;
&lt;h2&gt;快捷键&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Tab&lt;/td&gt;
&lt;td&gt;代码补全或者缩进&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl-Enter&lt;/td&gt;
&lt;td&gt;运行当前cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shift-Enter&lt;/td&gt;
&lt;td&gt;运行当前cell，选择下一个cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt-Enter&lt;/td&gt;
&lt;td&gt;运行当前cell，下面插入一个cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl-]&lt;/td&gt;
&lt;td&gt;缩进&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shift-Tab&lt;/td&gt;
&lt;td&gt;帮助信息&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 安装jupyter
pip install jupyter
# 建立server文件夹
mkdir jupyter-server
cd jypyter-server
# 运行jypyter-notebook
jupyter notebook
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;~/.jupyter/custom&lt;/code&gt;下新建&lt;code&gt;custom.css&lt;/code&gt;。notebook会自动加载这个css文件，来改变页面样式。&lt;/p&gt;
&lt;h2&gt;快捷键&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Tab&lt;/td&gt;
&lt;td&gt;代码补全或者缩进&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl-Enter&lt;/td&gt;
&lt;td&gt;运行当前cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shift-Enter&lt;/td&gt;
&lt;td&gt;运行当前cell，选择下一个cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt-Enter&lt;/td&gt;
&lt;td&gt;运行当前cell，下面插入一个cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl-]&lt;/td&gt;
&lt;td&gt;缩进&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shift-Tab&lt;/td&gt;
&lt;td&gt;帮助信息&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content><category term="jupyter"></category><category term="ipython"></category></entry><entry><title>Kafka笔记</title><link href="http://liguangsheng.github.io/kafkabi-ji.html" rel="alternate"></link><published>2016-06-17T21:14:00+08:00</published><updated>2017-07-17T22:24:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2016-06-17:/kafkabi-ji.html</id><summary type="html">&lt;h1&gt;安装&lt;/h1&gt;
&lt;p&gt;访问&lt;code&gt;http://kafka.apache.org/downloads&lt;/code&gt;下载对应Scala版本的Kafka下载即可&lt;/p&gt;
&lt;h1&gt;启动Kafka&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 启动Zookkeeper
bin/zookeeper-server-start.sh config/zookeeper.properties &amp;amp;

# 启动Kafka
bin/kafka-server-start.sh config/server.properties
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Kafka&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 创建Topic
bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test

# 列出Topic
bin/kafka-topics.sh --list --zookeeper localhost:2181
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;python示例&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# kafka_producer.py&lt;/span&gt;
&lt;span class="kn"&gt;from …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;安装&lt;/h1&gt;
&lt;p&gt;访问&lt;code&gt;http://kafka.apache.org/downloads&lt;/code&gt;下载对应Scala版本的Kafka下载即可&lt;/p&gt;
&lt;h1&gt;启动Kafka&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 启动Zookkeeper
bin/zookeeper-server-start.sh config/zookeeper.properties &amp;amp;

# 启动Kafka
bin/kafka-server-start.sh config/server.properties
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Kafka&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 创建Topic
bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test

# 列出Topic
bin/kafka-topics.sh --list --zookeeper localhost:2181
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;python示例&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# kafka_producer.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kafka&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;KafkaProducer&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kafka.errors&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;KafkaError&lt;/span&gt;

&lt;span class="n"&gt;producer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KafkaProducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bootstrap_servers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;localhost:9092&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Message {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Produce: {}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;producer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# kafka_consumer.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kafka&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;KafkaConsumer&lt;/span&gt;

&lt;span class="c1"&gt;# To consume latest messages and auto-commit offsets&lt;/span&gt;
&lt;span class="n"&gt;consumer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KafkaConsumer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bootstrap_servers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;localhost:9092&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;consumer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# message value and key are raw bytes -- decode if necessary!&lt;/span&gt;
    &lt;span class="c1"&gt;# e.g., for unicode: `message.value.decode(&amp;#39;utf-8&amp;#39;)`&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;: key=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; value=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;partition&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                         &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                         &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="kafka"></category></entry><entry><title>win32实现屏幕找色</title><link href="http://liguangsheng.github.io/win32-find-color.html" rel="alternate"></link><published>2016-03-12T00:00:00+08:00</published><updated>2016-03-12T00:00:00+08:00</updated><author><name>Li Guangsheng</name></author><id>tag:liguangsheng.github.io,2016-03-12:/win32-find-color.html</id><summary type="html">&lt;p&gt;Implement FindColor function with win32.&lt;/p&gt;</summary><content type="html">&lt;p&gt;实现屏幕找色功能的基本思路是将目标区域内的像素颜色，逐个与目标颜色比对，直到找到为止。&lt;/p&gt;
&lt;p&gt;win32中有个函数叫做GetPixel()，这个函数可以用来获取屏幕上某个点的RGB值，用这个函数虽然可以实现我们的目标，但是在目标区域较大的情况下，GetPixel()存在严重的效率问题，找色非！常！慢！&lt;/p&gt;
&lt;p&gt;这里有一种效率比较高的屏幕找色函数的实现，主要步骤是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用BitBlt函数将屏幕贴图到内存兼容DC中&lt;/li&gt;
&lt;li&gt;使用GetBitmapBits函数将bitmap图片的所有颜色值一次性输入到缓冲区中&lt;/li&gt;
&lt;li&gt;将缓冲区中的颜色值与目标颜色进行比对&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实现代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// 在rect的矩形区域内查找颜色为rgb的像素点&lt;/span&gt;
&lt;span class="n"&gt;POINT&lt;/span&gt; &lt;span class="nf"&gt;FindColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RECT&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DWORD&lt;/span&gt; &lt;span class="n"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HDC&lt;/span&gt; &lt;span class="n"&gt;ScreenDC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GetDC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;HDC&lt;/span&gt; &lt;span class="n"&gt;memScreenDC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateCompatibleDC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ScreenDC&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bottom&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;HBITMAP&lt;/span&gt; &lt;span class="n"&gt;hBitmap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateCompatibleBitmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetDC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;HGDIOBJ&lt;/span&gt; &lt;span class="n"&gt;hOldbmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SelectObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;memScreenDC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hBitmap&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;BitBlt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;memScreenDC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ScreenDC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SRCCOPY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;SelectObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;memScreenDC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hOldbmp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;BYTE&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;bmpBuffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BYTE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;GetBitmapBits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hBitmap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bmpBuffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;DeleteObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hBitmap&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;DeleteDC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;memScreenDC&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bmpBuffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bmpBuffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bmpBuffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;GetRValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;GetGValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;GetBValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;delete&lt;/span&gt; &lt;span class="n"&gt;bmpBuffer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;POINT&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;delete&lt;/span&gt; &lt;span class="n"&gt;bmpBuffer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;POINT&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这个函数在1366*768的矩形区域中找色一次耗时大约40ms，效率还算可以。如果需要大量使用，则可以修改代码，不要重复的创建和删除资源，比如创建DC和删除DC，分配缓冲区和回收缓冲区。&lt;/p&gt;</content><category term="C"></category><category term="C++"></category><category term="Win32"></category></entry></feed>